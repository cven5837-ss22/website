---
title: "Welcome to Data Analytics for Development"
subtitle: "CVEN 5837 - Summer 2022"
author: "Lars Schöbitz"
format: 
  revealjs: 
    theme: slides.scss
    transition: fade
    slide-number: true
    logo: img/logo.png
    footer: "https://cven5837-ss22.github.io/website/"
editor: source
execute:
  freeze: auto
params:
    week: 1
---

```{r}
#| include: false
library(countdown)
library(magrittr)
```


# Welcome! `r emo::ji("wave")`  {background-color="#0F4C81"}

## Meet the lecturer

::: columns

::: {.column width="50%"}

**Lars Schöbitz (he/him)** 

![](img/lec-01/lars_schoebitz_profile_photo.jpg){fig-alt="Headshot of Lars Schöbitz" fig-align="center"}
:::

::: {.column width="50%"}
- Environmental Engineer  
- Open Science Specialist at ETH Zurich
- Independent Instructor for Data Science with R  
- Twitter: [@larnsce](https://twitter.com/larnsce)
:::
:::

## Learning Goals (for the course)

- Be familiar with the most commonly used qualitative and quantitative data collection methods and tools.
- Be able to employ remote sensing and in-situ data, and analysis tools to illustrate the utility of solutions for water, agriculture, disaster forecasting and relief, air quality, and global health.

## Why are you here?


![](img/lec-01/items-slide/items-slide.001.png)


:::{.callout-note}

## Pick an item

What does the item you have picked have to do with the reason for you being here?
:::


## Topics

::: {.incremental}
-   Overview of qualitative and quantitative research methods and tools
-   The data science life-cycle
-   Data organization in spreadsheets
-   Exploratory data analysis using visualization
-   Concept of tidy data and data tidying
-   Data transformation and descriptive statistics
-   Data communication using the Quarto open-source scientific and technical publishing system
:::

## Learning Objectives (for this week)

```{r}

lobj1 <- readr::read_csv(here::here("data/tab-01_rbtl-learning-objectives.csv")) |>
  dplyr::filter(week == params$week) |>
  dplyr::pull(learning_objectives)

```

::: {.incremental}
1. `r lobj1[1]`
1. `r lobj1[2]`
1. `r lobj1[3]`
1. `r lobj1[4]`
:::

##

![](img/lec-01/starwars-rey-rstats.png)

::: aside
Artwork from [@juliesquid](https://twitter.com/juliesquid) for [@openscapes](https://twitter.com/openscapes) (illustrated by [@allison_horst](https://twitter.com/allison_horst))
:::

# Classroom tools {background-color="#0F4C81"}

## Live Coding Exercises 

- Instructor writes and narrates code out loud 
- Intstructor explains elements and principles that are relevant
- Code is displayed on second screen / split screen
- Learners join by writing and executing the same code
- Learners "code-along" with the instructor

## Pair Programming Exercises 

- Two learners work together in a break out session
- One person (the driver) shares the screen and does the typing
- The other person (the navigator) offers comments and suggestions
- Roles get switched 

## Platforms and Tools

- R
- RStudio (Cloud)
- tidyverse R Packages
- Quarto publishing system

## [cven5837-ss22.github.io/website/](https://cven5837-ss22.github.io/website/) `r emo::ji("bookmark")`

# RStudio Cloud {background-color="#0F4C81"}

## - {background-image="img/lec-01/illustration-slides/illustration-slides.001.png"}

## - {background-image="img/lec-01/illustration-slides/illustration-slides.002.png"}

## - {background-image="img/lec-01/illustration-slides/illustration-slides.003.png"}

## - {background-image="img/lec-01/illustration-slides/illustration-slides.004.png"}

## - {background-image="img/lec-01/illustration-slides/illustration-slides.005.png"}

## - {background-image="img/lec-01/illustration-slides/illustration-slides.006.png"}

## - {background-image="img/lec-01/illustration-slides/illustration-slides.007.png"}

## Screen setup

- Who uses a second external screen? 
- "Yes" in the Zoom Chat

# Live Coding Exercise {background-color="#0F4C81"}

## live-01a-setup - RStudio Cloud Setup

1. Head over to rstudio.cloud
2. Create a free account if you do not have one yet
3. Open the link that is posted to the Zoom chat
4. Accept the invitation to join the cven5837-ss22 workspace
5. Post "ready" to the Zoom chat when you are done

## Break

![](img/lec-01/coffee-break.jpg)

```{r}

countdown(
  minutes = 10, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::


# Data Science Lifecycle {background-color="#0F4C81"}

## Think, Pair, Share

:::{.callout-note}

## Question 

1. What is your mental model of the Data Science Lifecycle?
:::

- **Think** for 2 minutes
- **Pair** with your neighbour for 4 minutes
- **Share** your answer with the class


```{r, echo = FALSE}

countdown(
  minutes = 2, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```


## Deep End

<div style="width:100%;height:0;padding-bottom:56%;position:relative;"><iframe src="https://giphy.com/embed/3pWRgRw86JyBa" width="75%" height="75%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div><p><a href="https://giphy.com/gifs/matthew-west-all-in-matthew-west-3pWRgRw86JyBa">via GIPHY</a></p>

## - {background-image="img/lec-01/data-science-lifecycle/data-science-lifecycle.001.png" background-size="contain"}

::: {.notes}

Add notes

:::

## - {background-image="img/lec-01/data-science-lifecycle/data-science-lifecycle.002.png" background-size="contain"}

::: {.notes}

1. First you must import your data into R. This typically means that you take data stored:

- in a file
- in a database, 
- or web application, and load it into R. 

2. If you can get your data into R, you can  do data science on it!

:::

## - {background-image="img/lec-01/data-science-lifecycle/data-science-lifecycle.003.png" background-size="contain"}

::: {.notes}

1. Once you’ve imported your data, it is a good idea to tidy it. 

2. This means to get it into a structure that lets you focus on the questions about your data and not the format it needs to be in

3. This is the step where we spend by far the biggest amount of our time. 

4. It has been estimated that we spend about 80% of our time with cleaning and tidying data, so that we can use it fo our analyses.

5. In my courses you will learn how to structure your data in a tidy format as you collect it, and before you import it. A highly underestimated skill.

:::

## - {background-image="img/lec-01/data-science-lifecycle/data-science-lifecycle.004.png" background-size="contain"}

::: {.notes}

1. Once your data is tidy, a common first step is to transform it.

2. This includes 
- narrowing in on what interests you (like all people without toilets in one district, or all data from last year)
- creating new variables from existing (like toilet density, as in number of people per toilet) 
- calculating summary statistics (like counts or the mean)

Together, tidying and transforming are called wrangling, because getting your data in a form that’s natural to work with often feels like a fight!

:::

## - {background-image="img/lec-01/data-science-lifecycle/data-science-lifecycle.005.png" background-size="contain"}

::: {.notes}

1. Once you have tidy data with the variables you need, there are two main engines of knowledge generation: 

- visualisation 
- and modelling. 

2. These have complementary strengths and weaknesses so any real analysis will iterate between them many times.

3. Visualisation is a fundamentally human activity. A good visualisation will show you things that you did not expect, or raise new questions about the data.

:::

## - {background-image="img/lec-01/data-science-lifecycle/data-science-lifecycle.006.png" background-size="contain"}

::: {.notes}

1. Models are complementary tools to visualisation. Once you have made your questions sufficiently precise, you can use a model to answer them.

2. In my courses, they play a very small part, but I am confident that you will be able to enhance your knowledge on modelling once you understand the basic principles of using the R lanuage.

:::

## - {background-image="img/lec-01/data-science-lifecycle/data-science-lifecycle.007.png" background-size="contain"}

::: {.notes}

1. The last step of data science is communication, an absolutely critical part of any data analysis project. 

2. It doesn’t matter how well your models and visualisation have led you to understand the data, unless you can also communicate your results to others.

3. And this is a part where R has become really strong.

:::

# Live Coding Exercise {background-color="#0F4C81"}

## live-01b-data-science-lifecycle - Data Science Lifecycle

1. Head over to rstudio.cloud
2. Open the workspace for the course (cven5837-ss22)
3. Open "Projects"
4. Open the "course-materials" project
5. Follow along with me

## Break

![](img/lec-01/coffee-break.jpg)

```{r}

countdown(
  minutes = 5, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::

# R {background-color="#0F4C81"}

## Packages {auto-animate="true"}

::: {.incremental}

:::: {.columns}

::: {.column width="40%"}

**base R**

```{r}
#| eval: false
#| echo: true
sqrt(49)
sum(1, 2)
```

- Functions come with R

:::

::: {.column width="5%"}

:::

::: {.column width="55%"}

**R Packages**

```{r}
#| eval: false
#| echo: true
library(dplyr)

```

- Installed once in the Console: `install.packages("dplyr")`
- Loaded per script

:::

::::

:::

::: {.notes}

Packages

- Main way that reusable code is shared in R
- Combination of code, data, and documentation
- R has a rich ecosystem of packages for data manipulation & analysis

:::

## Functions & Arguments {auto-animate="true"}

```{r}
#| code-line-numbers: "3-4"
#| eval: false
#| echo: true
library(dplyr)

filter(.data = gapminder, 
       year == 2007)
```

- Function: `filter()`
- Argument: `.data = ` 
- Arguments following: `year == 2007` **What do do with the data**

## Objects {auto-animate="true"}

```{r}
#| eval: false
#| code-line-numbers: "3-4"
#| echo: true
library(dplyr)

gapminder_yr_2007 <- filter(.data = gapminder, 
                            year == 2007)
```

- Function: `filter()`
- Argument: `.data = `
- Arguments following: `year == 2007` **What do do with the data**
- Object: `gapminder_yr_2007`

## Operators {auto-animate="true"}

```{r}
#| eval: false
#| code-line-numbers: "3-4"
#| echo: true
library(dplyr)

gapminder_yr_2007 <- gapminder |> 
  filter(year == 2007) 
```

- Function: `filter()`
- Argument: `.data = `
- Arguments following: `year == 2007` **What do do with the data**
- Object: `gapminder_yr_2007`
- Assignment operator: `<-`
- Pipe operator: `|>`

## Rules

Rules of `dplyr` functions:

::: {.incremental}

- First argument is always a data frame
- Subsequent arguments say what to do with that data frame
- Always return a data frame  
- Don't modify in place 

:::

# Course information {background-color="#0F4C81"}

## Weekly Structure

|          |                                           |
|----------|-------------------------------------------|
| **Monday**   |  Learning reflections are due              |
| **Tuesday**  | Lecture                                   |
| **Wednesday** | Feedback (grading) on assignment |
| **Thursday** | Student hours on Zoom (10 am to 12 pm CEST) |
| **Friday**   | Homework assignment is due             |

## Homework assignments

- Weekly programming assignments
- 75% of the total grade

## Learning reflections

- Reflections on the different class elements (lecture, homework assignment, readings)
- minimum 200 words
- 25% of the total grade

## Grading {.smaller .scrollable}

```{r}

readr::read_csv(here::here("data/tab-03_grading-scheme.csv")) |>
  knitr::kable()

```

## Late work policy

- up to 2 working days after deadline (25% penalty for each day)
  - Tuesday for homework assignments (-50%)
  - Wednesday for learning reflections (-50%)
- work handed in more than two working days after due date with be graded 0%

# Homework week 1 {background-color="#0F4C81"}

## Homework due dates

- All material on [course website](https://cven5837-ss22.github.io/website/weeks/wk-01.html)
- Homework assignment due: Friday, 8th July
- Learning reflection due: Monday, 11th July

# Thanks! `r emo::ji("sunflower")`  {background-color="#0F4C81"}

## 

Slides created via revealjs and Quarto: https://quarto.org/docs/presentations/revealjs/ 
Access slides as [PDF on GitHub](https://rbtl-fs22.github.io/website/slides/pt2-d15-data-communication/pt2-d15-data-communication.pdf)

All material is licensed under [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/). 

